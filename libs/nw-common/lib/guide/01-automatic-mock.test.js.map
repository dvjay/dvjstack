{"version":3,"file":"01-automatic-mock.test.js","sourceRoot":"","sources":["../../src/guide/01-automatic-mock.test.ts"],"names":[],"mappings":";AAAA,oDAAoD;AACpD,2DAA2D;;AAE3D,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,wCAAwC;AAEpE,+CAA4C;AAC5C,+DAA4D;AAE5D,UAAU,CAAC,GAAG,EAAE;IACd,gEAAgE;IAChE,MAAM,CAAC,yBAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;IACnE,IAAI,yCAAmB,EAAE,CAAC;IAC1B,MAAM,CAAC,yBAAW,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;IAC5E,oCAAoC;IACpC,MAAM,CAAC,yBAAW,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAE3C,MAAM,mBAAmB,GAAwB,IAAI,yCAAmB,EAAE,CAAC;IAC3E,6CAA6C;IAC7C,MAAM,CAAC,yBAAW,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAE7C,MAAM,iBAAiB,GAAW,UAAU,CAAC;IAC7C,mBAAmB,CAAC,iBAAiB,EAAE,CAAC;IAExC,oDAAoD;IACpD,MAAM,uBAAuB,GAAgB,MAAM,CAAC,yBAAW,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAEnF,MAAM,iBAAiB,GAAG,MAAM,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;IACxE,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEtE,6BAA6B;IAC7B,MAAM,CAAC,iBAAiB,CAAC,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;IAClE,MAAM,CAAC,iBAAiB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC","sourcesContent":["// This example is adapted from the Jest guide here:\n// https://jestjs.io/docs/en/es6-class-mocks#automatic-mock\n\njest.mock('./SoundPlayer'); // SoundPlayer is now a mock constructor\n\nimport { SoundPlayer } from './SoundPlayer';\nimport { SoundPlayerConsumer } from './SoundPlayerConsumer';\n\nbeforeEach(() => {\n  // Clear all instances and calls to constructor and all methods:\n  mocked(SoundPlayer).mockClear();\n});\n\nit('We can check if the consumer called the class constructor', () => {\n  new SoundPlayerConsumer();\n  expect(SoundPlayer).toHaveBeenCalledTimes(1);\n});\n\nit('We can check if the consumer called a method on the class instance', () => {\n  // Show that mockClear() is working:\n  expect(SoundPlayer).not.toHaveBeenCalled();\n\n  const soundPlayerConsumer: SoundPlayerConsumer = new SoundPlayerConsumer();\n  // Constructor should have been called again:\n  expect(SoundPlayer).toHaveBeenCalledTimes(1);\n\n  const coolSoundFileName: string = 'song.mp3';\n  soundPlayerConsumer.playSomethingCool();\n\n  // mock.instances is available with automatic mocks:\n  const mockSoundPlayerInstance: SoundPlayer = mocked(SoundPlayer).mock.instances[0];\n\n  const mockPlaySoundFile = mocked(mockSoundPlayerInstance.playSoundFile);\n  expect(mockPlaySoundFile.mock.calls[0][0]).toEqual(coolSoundFileName);\n\n  // Equivalent to above check:\n  expect(mockPlaySoundFile).toHaveBeenCalledWith(coolSoundFileName);\n  expect(mockPlaySoundFile).toHaveBeenCalledTimes(1);\n});\n"]}